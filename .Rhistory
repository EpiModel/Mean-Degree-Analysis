#require(cowplot)
legend <- get_legend(total_plot)
total_plot <- total_plot + theme(legend.position = "none")
grid.arrange(arrangeGrob(total_plot, main_plot, casl_plot), legend, ncol=2,
widths=c(5,1))
}
}
png('Figure1.png', width=2048, height=1536, res=300)
plot_md_comparisons(all)
dev.off()
png('Figure2.png', width=2048, height=1536, res=300)
plot_md_comparisons(race.cat, "Race/Ethnicity",
c("Black","Hispanic", "Other", "White"))
dev.off()
png('SF2.png', width=2048, height=1536, res=300)
plot_md_comparisons(age.cat, "Age Category",
c("15-24 years",
"25-34 years",
"35-44 years",
"45-54 years",
"55-65 years"))
dev.off()
png('SF3.png', width=2048, height=1536, res=300)
plot_md_comparisons(region, "Census Region",
c("Northeast",
"Midwest",
"South",
"West"))
dev.off()
png('SF4.png', width=2048, height=1536, res=300)
plot_md_comparisons(education, "Highest Level of Education",
c("High school or below",
"Some college",
"College and above"))
dev.off()
png('SF4.png', width=2048, height=1536, res=300)
plot_md_comparisons(education, "Level of Education",
c("High school or below",
"Some college",
"College and above"))
dev.off()
png('SF4.png', width=2048, height=1536, res=300)
plot_md_comparisons(education, "Education Level",
c("High school or below",
"Some college",
"College and above"))
dev.off()
png('SF4.png', width=2300, height=1536, res=300)
plot_md_comparisons(education, "Education Level",
c("High school or below",
"Some college",
"College and above"))
dev.off()
png('SF4.png', width=2500, height=1536, res=300)
plot_md_comparisons(education, "Education Level",
c("High school or below",
"Some college",
"College and above"))
dev.off()
png('SF4.png', width=2500, height=1536, res=400)
plot_md_comparisons(education, "Education Level",
c("High school or below",
"Some college",
"College and above"))
dev.off()
png('SF4.png', width=2500, height=1536, res=350)
plot_md_comparisons(education, "Education Level",
c("High school or below",
"Some college",
"College and above"))
dev.off()
png('SF4.png', width=2048, height=1536, res=300)
plot_md_comparisons(education, "Education Level",
c("High school or below",
"Some college",
"College and above"))
dev.off()
png('SF4.png', width=2500, height=1536, res=300)
plot_md_comparisons(education, "Education Level",
c("High school or below",
"Some college",
"College and above"))
dev.off()
png('SF4.png', width=2500, height=1600, res=300)
plot_md_comparisons(education, "Education Level",
c("High school or below",
"Some college",
"College and above"))
dev.off()
png('SF4.png', width=2500, height=1600, res=350)
plot_md_comparisons(education, "Education Level",
c("High school or below",
"Some college",
"College and above"))
dev.off()
png('SF4.png', width=2700, height=1600, res=350)
plot_md_comparisons(education, "Education Level",
c("High school or below",
"Some college",
"College and above"))
dev.off()
png('SF4.png', width=2800, height=1600, res=350)
plot_md_comparisons(education, "Education Level",
c("High school or below",
"Some college",
"College and above"))
dev.off()
png('SF4.png', width=2900, height=1600, res=350)
plot_md_comparisons(education, "Education Level",
c("High school or below",
"Some college",
"College and above"))
dev.off()
png('SF5.png', width=2900, height=1600, res=350)
plot_md_comparisons(income, "Annual Household Income",
c("$0 to $19,999",
"$20,000 to $39,999",
"$40,000 to $74,999",
"$75,000 or more"))
dev.off()
png('SF5.png', width=2900, height=1600, res=320)
plot_md_comparisons(income, "Annual Household Income",
c("$0 to $19,999",
"$20,000 to $39,999",
"$40,000 to $74,999",
"$75,000 or more"))
dev.off()
png('SF5.png', width=2900, height=1600, res=300)
plot_md_comparisons(income, "Annual Household Income",
c("$0 to $19,999",
"$20,000 to $39,999",
"$40,000 to $74,999",
"$75,000 or more"))
dev.off()
png('SF5.png', width=3000, height=1600, res=300)
plot_md_comparisons(income, "Annual Household Income",
c("$0 to $19,999",
"$20,000 to $39,999",
"$40,000 to $74,999",
"$75,000 or more"))
dev.off()
# Specify start and end months for offsets
# Note: Only single month steps are supported
start_month_offset <- 0
end_month_offset <- 12
month <- seq(start_month_offset, end_month_offset)
n_month <- paste(month, "M", sep="")
# Initalize data frames with appropriate row and column dimensions
ongoing.eval.m <- matrix(nrow = length(ARTnet.long$SUB_DATE),
ncol = end_month_offset - start_month_offset + 1)
ongoing.eval.df <- data.frame(ongoing.eval.m)
ongoing3.m <- matrix(nrow = length(ARTnet.long$SUB_DATE),
ncol = end_month_offset - start_month_offset + 1)
ongoing3.df <- data.frame(ongoing3.m)
ARTnet.long.adjusted <- ARTnet.long
ARTnet.wide.adjusted <- ARTnet.wide
mean.degree.main <- c()
mean.degree.casual <- c()
for (i in start_month_offset:end_month_offset) {
ongoing.eval <- paste("ongoing.evaluation.date.m",i,sep="")
names(ongoing.eval.df)[i - start_month_offset + 1] <- ongoing.eval
assign(ongoing.eval, ARTnet.long$SUB_DATE - round(i*30.44))
ongoing.eval.df[,i - start_month_offset + 1] <- get(ongoing.eval)
ongoing3 <- paste("ongoing3.m",i,sep="")
names(ongoing3.df)[i - start_month_offset + 1] <- ongoing3
assign(ongoing3, ifelse(is.na(ifelse(ARTnet.long.adjusted$start.date.2 <=
get(ongoing.eval) &
ARTnet.long.adjusted$end.date.2 >= get(ongoing.eval),
1, 0)), 0, ifelse(ARTnet.long.adjusted$start.date.2 <=
get(ongoing.eval) &
ARTnet.long.adjusted$end.date.2 >= get(ongoing.eval),
1, 0)))
ongoing3.df[,i - start_month_offset + 1] <- get(ongoing3)
ARTnet.long.adjusted <- cbind(ARTnet.long.adjusted,
ongoing.eval.df[i - start_month_offset + 1],
ongoing3.df[i - start_month_offset + 1])
ARTnet.wide.adjusted <- ARTnet.long.adjusted %>%
filter(RAI == 1 | IAI == 1 | ROI == 1 | IOI == 1) %>%
filter(ptype == 1) %>%
group_by(AMIS_ID) %>%
summarise(deg.main.n.month = sum(get(paste("ongoing3.m",i,sep="")))) %>%
right_join(ARTnet.wide.adjusted, by = "AMIS_ID")
# #Additional filtering
# ARTnet.wide.adjusted <- ARTnet.wide.adjusted %>%
#   filter(age >= 16 & age <= 29) %>%
#   filter(city2 == "Chicago")
ARTnet.wide.adjusted$deg.main.n.month <- ifelse(is.na(
ARTnet.wide.adjusted$deg.main.n.month), 0,
ARTnet.wide.adjusted$deg.main.n.month)
mean.degree.main[i - start_month_offset + 1] <- mean(
ARTnet.wide.adjusted$deg.main.n.month)
deg.main.n.month.name <- paste("deg.main.n.month.m",i,sep="")
names(ARTnet.wide.adjusted)[names(ARTnet.wide.adjusted) ==
"deg.main.n.month"] <- deg.main.n.month.name
ARTnet.wide.adjusted <- ARTnet.long.adjusted %>%
filter(RAI == 1 | IAI == 1 | ROI == 1 | IOI == 1) %>%
filter(ptype == 2) %>%
group_by(AMIS_ID) %>%
summarise(deg.casl.n.month = sum(get(paste("ongoing3.m",i,sep="")))) %>%
right_join(ARTnet.wide.adjusted, by = "AMIS_ID")
ARTnet.wide.adjusted$deg.casl.n.month <- ifelse(is.na(
ARTnet.wide.adjusted$deg.casl.n.month), 0,
ARTnet.wide.adjusted$deg.casl.n.month)
mean.degree.casual[i - start_month_offset + 1] <- mean(
ARTnet.wide.adjusted$deg.casl.n.month)
deg.casl.n.month.name <- paste("deg.casl.n.month.m",i,sep="")
names(ARTnet.wide.adjusted)[names(ARTnet.wide.adjusted) ==
"deg.casl.n.month"] <- deg.casl.n.month.name
}
ARTnet.wide.adjusted <- ARTnet.wide.adjusted %>%
mutate(main.slope = deg.main.n.month.m12 - deg.main.n.month.m0,
casl.slope = deg.casl.n.month.m12 - deg.casl.n.month.m0,
main.mean = (deg.main.n.month.m0 + deg.main.n.month.m1 + deg.main.n.month.m2 +
deg.main.n.month.m3 + deg.main.n.month.m4 + deg.main.n.month.m5 +
deg.main.n.month.m6 + deg.main.n.month.m7 + deg.main.n.month.m8 +
deg.main.n.month.m9 + deg.main.n.month.m10 + deg.main.n.month.m11 + deg.main.n.month.m12)/13,
casl.mean = (deg.casl.n.month.m0 + deg.casl.n.month.m1 + deg.casl.n.month.m2 +
deg.casl.n.month.m3 + deg.casl.n.month.m4 + deg.casl.n.month.m5 +
deg.casl.n.month.m6 + deg.casl.n.month.m7 + deg.casl.n.month.m8 +
deg.casl.n.month.m9 + deg.casl.n.month.m10 + deg.casl.n.month.m11 + deg.casl.n.month.m12)/13,
total.mean = (deg.main.n.month.m0 + deg.main.n.month.m1 + deg.main.n.month.m2 +
deg.main.n.month.m3 + deg.main.n.month.m4 + deg.main.n.month.m5 +
deg.main.n.month.m6 + deg.main.n.month.m7 + deg.main.n.month.m8 +
deg.main.n.month.m9 + deg.main.n.month.m10 + deg.main.n.month.m11 +
deg.main.n.month.m12 + deg.casl.n.month.m0 + deg.casl.n.month.m1 +
deg.casl.n.month.m2 + deg.casl.n.month.m3 + deg.casl.n.month.m4 +
deg.casl.n.month.m5 + deg.casl.n.month.m6 + deg.casl.n.month.m7 +
deg.casl.n.month.m8 + deg.casl.n.month.m9 + deg.casl.n.month.m10 +
deg.casl.n.month.m11 + deg.casl.n.month.m12)/13)
# Add mean duration of relationships to ARTnet.wide.adjusted
ARTnet.wide.adjusted <- ARTnet.long.adjusted %>%
filter(RAI == 1 | IAI == 1 | ROI == 1 | IOI == 1) %>%
filter(ptype == 1) %>%
group_by(AMIS_ID) %>%
summarise(main.avgduration = mean(duration)) %>%
right_join(ARTnet.wide.adjusted, by = "AMIS_ID")
ARTnet.wide.adjusted <- ARTnet.long.adjusted %>%
filter(RAI == 1 | IAI == 1 | ROI == 1 | IOI == 1) %>%
filter(ptype == 2) %>%
group_by(AMIS_ID) %>%
summarise(casl.avgduration = mean(duration)) %>%
right_join(ARTnet.wide.adjusted, by = "AMIS_ID")
# Scale up average main and causal duration to months and years
ARTnet.wide.adjusted <- ARTnet.wide.adjusted %>%
mutate(main.avgduration.mo = main.avgduration/4,
casl.avgduration.mo = casl.avgduration/4,
main.avgduration.yr = main.avgduration/52,
casl.avgduration.yr = casl.avgduration/52)
summary(ARTnet.wide.adjusted$main.avgduration)
summary(ARTnet.wide.adjusted$casl.avgduration)
summary(ARTnet.wide.adjusted$main.avgduration.mo)
summary(ARTnet.wide.adjusted$casl.avgduration.mo)
summary(ARTnet.wide.adjusted$main.avgduration.yr)
summary(ARTnet.wide.adjusted$casl.avgduration.yr)
ARTnet.wide.adjusted <-
ARTnet.long.adjusted %>%
filter(ptype == 1) %>%
group_by(AMIS_ID) %>%
summarise(n.main = n()) %>%
right_join(ARTnet.wide.adjusted, by = "AMIS_ID")
ARTnet.wide.adjusted <-
ARTnet.long.adjusted %>%
filter(ptype == 2) %>%
group_by(AMIS_ID) %>%
summarise(n.casl = n()) %>%
right_join(ARTnet.wide.adjusted, by = "AMIS_ID")
ARTnet.wide.adjusted <-
ARTnet.long.adjusted %>%
filter(ptype == 3) %>%
group_by(AMIS_ID) %>%
summarise(n.one = n()) %>%
right_join(ARTnet.wide.adjusted, by = "AMIS_ID")
# Replace NA's with 0
ARTnet.wide.adjusted$n.main[is.na(ARTnet.wide.adjusted$n.main)] <- 0
ARTnet.wide.adjusted$n.casl[is.na(ARTnet.wide.adjusted$n.casl)] <- 0
ARTnet.wide.adjusted$n.one[is.na(ARTnet.wide.adjusted$n.one)] <- 0
# Create variable for total partners reported
ARTnet.wide.adjusted$n.all <- ARTnet.wide.adjusted$n.main + ARTnet.wide.adjusted$n.casl + ARTnet.wide.adjusted$n.one
mean(ARTnet.wide.adjusted$main.mean)
mean(ARTnet.wide.adjusted$casl.mean)
ARTnet.wide.adjusted %>%
group_by(race.cat) %>%
summarize(mean.main = mean(main.mean),
mean.casl = mean(casl.mean))
ARTnet.wide.adjusted %>%
group_by(age.cat) %>%
summarize(mean.main = mean(main.mean),
mean.casl = mean(casl.mean))
ARTnet.wide.adjusted %>%
group_by(REGCODE) %>%
summarize(mean.main = mean(main.mean),
mean.casl = mean(casl.mean))
ARTnet.wide.adjusted %>%
group_by(HLEDUCAT_2) %>%
summarize(mean.main = mean(main.mean),
mean.casl = mean(casl.mean))
ARTnet.wide.adjusted %>%
group_by(HHINCOME_2) %>%
summarize(mean.main = mean(main.mean),
mean.casl = mean(casl.mean))
linear_reg <- function(outcome, exposure) {
linear <- lm(outcome ~ exposure, data = ARTnet.wide.adjusted)
summary(linear)
round(confint(linear), 2)
}
linear_reg(main.slope, race.cat)
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$race.cat)
summary(linear)
linear_reg <- function(outcome, exposure) {
linear <- lm(outcome ~ exposure, data = ARTnet.wide.adjusted)
summary(linear)
round(confint(linear), 2)
return(linear)
}
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$race.cat)
summary(linear)
linear_reg <- function(outcome, exposure) {
linear <- lm(outcome ~ exposure, data = ARTnet.wide.adjusted)
summary(linear)
return(summary(linar), round(confint(linear), 2))
}
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$race.cat)
linear_reg <- function(outcome, exposure) {
linear <- lm(outcome ~ exposure, data = ARTnet.wide.adjusted)
summary(linear)
return(summary(linar))
return(round(confint(linear), 2))
}
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$race.cat)
linear_reg <- function(outcome, exposure) {
linear <- lm(outcome ~ exposure, data = ARTnet.wide.adjusted)
summary(linear)
return(summary(linear))
return(round(confint(linear), 2))
}
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$race.cat)
linear_reg <- function(outcome, exposure) {
linear <- lm(outcome ~ exposure, data = ARTnet.wide.adjusted)
summary(linear)
return(summary(linear))
round(confint(linear), 2)
}
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$race.cat)
linear_reg <- function(outcome, exposure) {
linear <- lm(outcome ~ exposure, data = ARTnet.wide.adjusted)
summary(linear)
return(c(summary(linear), round(confint(linear), 2)))
}
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$race.cat)
linear_reg <- function(outcome, exposure) {
linear <- lm(outcome ~ exposure, data = ARTnet.wide.adjusted)
summary(linear)
round(confint(linear), 2)
}
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$race.cat)
linear_reg <- function(outcome, exposure) {
linear <- lm(outcome ~ exposure, data = ARTnet.wide.adjusted)
s <- summary(linear)
r <- round(confint(linear), 2)
return(s, r)
}
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$race.cat)
linear_reg <- function(outcome, exposure) {
linear <- lm(outcome ~ exposure, data = ARTnet.wide.adjusted)
s <- summary(linear)
r <- round(confint(linear), 2)
return(c(s, r))
}
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$race.cat)
linear_reg <- function(outcome, exposure) {
linear <- lm(outcome ~ exposure, data = ARTnet.wide.adjusted)
s <- summary(linear)
r <- round(confint(linear), 2)
return(s)
return(r)
}
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$race.cat)
linear_reg <- function(outcome, exposure) {
linear <- lm(outcome ~ exposure, data = ARTnet.wide.adjusted)
s <- summary(linear)
r <- round(confint(linear), 2)
list <- list(s, r)
return(list)
}
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$race.cat)
linear_reg <- function(outcome, exposure) {
linear <- lm(outcome ~ exposure, data = ARTnet.wide.adjusted)
s <- summary(linear)
r <- round(confint(linear), 2)
return(list(s,r))
}
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$race.cat)
linear_reg(ARTnet.wide.adjusted$main.slope, as.factor(ARTnet.wide.adjusted$HHINCOME_2))
linear_reg(ARTnet.wide.adjusted$main.slope, factor(ARTnet.wide.adjusted$HHINCOME_2))
linear_reg(ARTnet.wide.adjusted$main.slope, factor(ARTnet.wide.adjusted$HHINCOME_2))
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$REGCODE)
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$race.cat)
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$age.cat)
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$age)
linear_reg(ARTnet.wide.adjusted$main.slope, factor(ARTnet.wide.adjusted$HHINCOME_2))
linear_reg(ARTnet.wide.adjusted$main.slope, factor(ARTnet.wide.adjusted$HLEDUCAT_2))
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$REGCODE)
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$main.avgduration.yr)
linear_reg(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$n.all)
linear_reg(ARTnet.wide.adjusted$casl.slope, ARTnet.wide.adjusted$race.cat)
linear_reg(ARTnet.wide.adjusted$casl.slope, ARTnet.wide.adjusted$age.cat)
linear_reg(ARTnet.wide.adjusted$casl.slope, ARTnet.wide.adjusted$age)
linear_reg(ARTnet.wide.adjusted$casl.slope, factor(ARTnet.wide.adjusted$HHINCOME_2))
linear_reg(ARTnet.wide.adjusted$casl.slope, factor(ARTnet.wide.adjusted$HLEDUCAT_2))
linear_reg(ARTnet.wide.adjusted$casl.slope, ARTnet.wide.adjusted$REGCODE)
linear_reg(ARTnet.wide.adjusted$casl.slope, ARTnet.wide.adjusted$main.avgduration.yr)
linear_reg(ARTnet.wide.adjusted$casl.slope, ARTnet.wide.adjusted$n.all)
boxplot(ARTnet.wide.adjusted$main.slope~ARTnet.wide.adjusted$race.cat)
summary(ARTnet.wide.adjusted$main.slope)
summary(ARTnet.wide.adjusted$casl.slope)
race.duration <- ARTnet.wide.adjusted %>%
group_by(race.cat) %>%
summarise(main.duration = mean(main.avgduration, na.rm = T))
ARTnet.long.adjusted %>%
filter(ptype == 1) %>%
group_by(race.cat) %>%
summarise(main.duration = mean(duration, na.rm = T))
ARTnet.long.adjusted %>%
filter(ptype == 2) %>%
group_by(race.cat) %>%
summarise(casl.duration = mean(duration, na.rm = T))
ARTnet.wide.adjusted %>%
group_by(race.cat) %>%
summarise(main.slope = mean(main.slope, na.rm = T),
casl.slope = mean(casl.slope, na.rm = T))
# Create Variable 'Age.Cat' to Create Age Categories for Ages
ARTnet.long.adjusted$age.cat <- ifelse(ARTnet.long.adjusted$age >= 15 & ARTnet.long.adjusted$age <= 24, '15-24',
ifelse(ARTnet.long.adjusted$age >= 25 & ARTnet.long.adjusted$age <= 34, '25-34',
ifelse(ARTnet.long.adjusted$age >= 35 & ARTnet.long.adjusted$age <= 44, '35-44',
ifelse(ARTnet.long.adjusted$age >= 45 & ARTnet.long.adjusted$age <= 54, '45-54',
ifelse(ARTnet.long.adjusted$age >= 55 & ARTnet.long.adjusted$age <= 65, '55-65',
ifelse(ARTnet.long.adjusted$age >= 66, '66+', 'unknown'))))))
ARTnet.long.adjusted %>%
filter(ptype == 1) %>%
group_by(age.cat) %>%
summarise(main.duration = mean(duration, na.rm = T))
ARTnet.long.adjusted %>%
filter(ptype == 2) %>%
group_by(age.cat) %>%
summarise(casl.duration = mean(duration, na.rm = T))
ARTnet.wide.adjusted %>%
group_by(age.cat) %>%
summarise(main.slope = mean(main.slope, na.rm = T),
casl.slope = mean(casl.slope, na.rm = T))
ARTnet.wide.adjusted %>%
group_by(HLEDUCAT_2) %>%
summarise(main.duration = mean(main.avgduration, na.rm = T),
casl.duration = mean(casl.avgduration, na.rm = T),
main.slope = mean(main.slope, na.rm = T),
casl.slope = mean(casl.slope, na.rm = T))
ARTnet.wide.adjusted %>%
group_by(HHINCOME_2) %>%
summarise(main.duration = mean(main.avgduration, na.rm = T),
casl.duration = mean(casl.avgduration, na.rm = T),
main.slope = mean(main.slope, na.rm = T),
casl.slope = mean(casl.slope, na.rm = T))
#check data
table(ARTnet.wide.adjusted$n.main, useNA = "always")
#check data
table(ARTnet.wide.adjusted$n.main, useNA = "always")
table(ARTnet.wide.adjusted$n.casl, useNA = "always")
table(ARTnet.wide.adjusted$n.one, useNA = "always")
table(ARTnet.wide.adjusted$n.all, useNA = "always")
table(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$n.main)
table(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$n.casl)
table(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$n.one)
table(ARTnet.wide.adjusted$main.slope, ARTnet.wide.adjusted$n.all)
table(ARTnet.wide.adjusted$casl.slope, ARTnet.wide.adjusted$n.main)
table(ARTnet.wide.adjusted$casl.slope, ARTnet.wide.adjusted$n.casl)
table(ARTnet.wide.adjusted$casl.slope, ARTnet.wide.adjusted$n.one)
plot(jitter(ARTnet.wide.adjusted$main.slope,0.1)~jitter(ARTnet.wide.adjusted$n.all, 0.1),
xlab="Total Number of Male Partners Reported", ylab="Difference in Degree of Main Relationships at 12- and 0-Month Offsets")
plot(ARTnet.wide.adjusted$main.slope~ARTnet.wide.adjusted$M_MP12OANUM2,
xlab="Total Number of Male Partners", ylab="Difference in Degree of Main Relationships at 12- and 0-Month Offsets")
plot(jitter(ARTnet.wide.adjusted$casl.slope,0.1)~jitter(ARTnet.wide.adjusted$n.all, 0.1),
xlab="Total Number of Male Partners Reported", ylab="Difference in Degree of Casual Relationships at 12- and 0-Month Offsets")
plot(ARTnet.wide.adjusted$casl.slope~ARTnet.wide.adjusted$M_MP12OANUM2,
xlab="Total Number of Male Partners", ylab="Difference in Degree of Main Relationships at 12- and 0-Month Offsets")
#main slope outliers
ARTnet.wide.adjusted %>%
filter(!(main.slope %in% c(-1:1))) %>%
select(AMIS_ID, main.slope)
## Load Data and Packages---------------------------------------------------------------------
library(ARTnetData, warn.conflicts=F, quietly=T)
library(dplyr, warn.conflicts=F, quietly=T)
library(knitr, warn.conflicts=F, quietly=T)
options(kableExtra.latex.load_packages = FALSE)
library(kableExtra, warn.conflicts=F, quietly=T)
library(lubridate)
library(gridExtra)
library(cowplot)
library(ggplot2)
# Load long data
ARTnet.long$ONGOING <- as.numeric(ARTnet.long$ONGOING)
ARTnet.long$ongoing2 <- ifelse(is.na(ARTnet.long$ONGOING), 0, #set 3017 missing values to not ongoing
ARTnet.long$ONGOING)
# Randomly impute days (1-30) for start dates and end dates that are not equal to SUB_DATE
set.seed(12345)
ARTnet.long$start.date.2 <- ARTnet.long$start.date
ARTnet.long$end.date.2 <- ARTnet.long$end.date
for (i in 1:nrow(ARTnet.long)) {
day(ARTnet.long[i,"start.date.2"]) <- sample(1:30, size=1, replace = T)
day(ARTnet.long[i,"end.date.2"]) <- ifelse(day(ARTnet.long[i,"end.date"]) != day(ARTnet.long[i,"SUB_DATE"]),
sample(1:30, size=1, replace = T), day(ARTnet.long[i,"end.date.2"]))
}
summary(day(ARTnet.long$start.date.2))
summary(day(ARTnet.long$end.date.2))
