colnames(mean.degree.main) <- n_month
rownames(mean.degree.main) <- unique_filter_var
colnames(mean.degree.casual) <- n_month
rownames(mean.degree.casual) <- unique_filter_var
colnames(mean.degree.main.dos) <- n_month
rownames(mean.degree.main.dos) <- unique_filter_var
colnames(mean.degree.casual.dos) <- n_month
rownames(mean.degree.casual.dos) <- unique_filter_var
colnames(n.total) <- n_month
rownames(n.total) <- unique_filter_var
colnames(n.main) <- n_month
rownames(n.main) <- unique_filter_var
colnames(n.casual) <- n_month
rownames(n.casual) <- unique_filter_var
out <- list("total" = list("md" = mean.degree.total,
"md.dos" = mean.degree.total.dos,
"n" = n.total),
"main" = list("md" = mean.degree.main,
"md.dos" = mean.degree.main.dos,
"n" = n.main),
"casual" = list("md" = mean.degree.casual,
"md.dos" = mean.degree.casual.dos,
"n" = n.casual))
if(length(unique_filter_var) > 1) {
var_val <- vector()
md_total <- vector()
md_total_dos <- vector()
md_main <- vector()
md_main_dos <- vector()
md_casl <- vector()
md_casl_dos <- vector()
num <- vector()
for (i in 1:length(names(out$main$md[,1]))) {
var_val <- c(var_val,
rep(names(out$main$md[,1][i]),
end_month_offset - start_month_offset + 1))
md_total <- c(md_total, out$total$md[i,])
md_total_dos <- c(md_total_dos, out$total$md.dos[i,])
md_main <- c(md_main, out$main$md[i,])
md_main_dos <- c(md_main_dos, out$main$md.dos[i,])
md_casl <- c(md_casl, out$casual$md[i,])
md_casl_dos <- c(md_casl_dos, out$casual$md.dos[i,])
num <- c(num, out$main$n[i,])
}
var_name <- rep(filter_var,length(names(out$main$md[,1]))*length(n_month))
month_num <- rep(month,length(names(out$main$md[,1])))
month <- rep(n_month,length(names(out$main$md[,1])))
} else {
var_name <- rep(filter_var,length(n_month))
var_val <- rep(filter_var,length(n_month))
month_num <- month
month <- n_month
num <- out$main$n[1,]
md_total <- out$total$md[1,]
md_total_dos <- out$total$md.dos[1,]
md_main <- out$main$md[1,]
md_main_dos <- out$main$md.dos[1,]
md_casl <- out$casual$md[1,]
md_casl_dos <- out$casual$md.dos[1,]
}
md_total_ll <- md_total - 1.96 * sqrt(md_total/num)
md_total_ul <- md_total + 1.96 * sqrt(md_total/num)
md_total_dos_ll <- md_total_dos - 1.96 * sqrt(md_total_dos/num)
md_total_dos_ul <- md_total_dos + 1.96 * sqrt(md_total_dos/num)
md_main_ll <- md_main - 1.96 * sqrt(md_main/num)
md_main_ul <- md_main + 1.96 * sqrt(md_main/num)
md_main_dos_ll <- md_main_dos - 1.96 * sqrt(md_main_dos/num)
md_main_dos_ul <- md_main_dos + 1.96 * sqrt(md_main_dos/num)
md_casl_ll <- md_casl - 1.96 * sqrt(md_casl/num)
md_casl_ul <- md_casl + 1.96 * sqrt(md_casl/num)
md_casl_dos_ll <- md_casl_dos - 1.96 * sqrt(md_casl_dos/num)
md_casl_dos_ul <- md_casl_dos + 1.96 * sqrt(md_casl_dos/num)
out_df <- data.frame(var_name, var_val, month_num, month, num,
md_total, md_total_ll, md_total_ul,
md_total_dos, md_total_dos_ll, md_total_dos_ul,
md_main, md_main_ll, md_main_ul,
md_main_dos, md_main_dos_ll, md_main_dos_ul,
md_casl, md_casl_ll, md_casl_ul,
md_casl_dos, md_casl_dos_ll, md_casl_dos_ul)
ifelse(output_type == 'list',
return(out),
return(out_df))
}
all <- n_month_offset(0,12)
race.cat <- n_month_offset(0,12,'race.cat')
age.cat <- n_month_offset(0,12,'age.cat')
region <- n_month_offset(0,12,'REGCODE')
income <- n_month_offset(0,12,'HHINCOME')
income <- income %>% filter(!is.na(var_val) &
var_val < 77)
education <- n_month_offset(0,12,'HLEDUCAT_2')
education <- education %>% filter(!is.na(var_val))
partners_bi2 <- n_month_offset(0,12,'partners_bi2')
partners_bi2 <- partners_bi2 %>% filter(!is.na(var_val))
png('Figure1.png', width=2048, height=1536, res=300)
plot_md_comparisons(all)
dev.off()
plot_md_comparisons <- function(md_df, cat, labels) {
if (length(unique(md_df$var_val)) == 1) {
total_plot_title <- paste("All Partnerships (Main & Casual)")
main_plot_title <- paste("Main Partnerships")
casl_plot_title <- paste("Casual Partnerships")
total_plot <- ggplot(md_df,
aes(x=factor(month_num), y=md_total)) +
geom_line() +
geom_point() +
geom_errorbar(
aes(ymin=md_total_ll, ymax=md_total_ul),
width=.2,
position=position_dodge(0.05)) +
labs(fill= "Category", title=total_plot_title,
x = "Month Offset", y = "Mean Degree") +
ylim(c(0.9, 1.3)) +
theme_minimal(base_size = 10)
total_plot <- total_plot +
geom_hline(aes(yintercept = unique(md_total_dos)),
linetype = "dotted",
data = md_df)
total_plot <- total_plot +
geom_hline(aes(yintercept = unique(md_total_dos_ll)),
linetype = "dashed",
data = md_df)
total_plot <- total_plot +
geom_hline(aes(yintercept = unique(md_total_dos_ul)),
linetype = "dashed",
data = md_df)
total_plot <- total_plot + scale_x_discrete(breaks = factor(
unique(md_df$month_num)),
labels = unique(
md_df$month))
main_plot <- ggplot(md_df,
aes(x=factor(month_num), y=md_main),
theme(axis.text.x = month)) +
geom_line() +
geom_point()+
geom_errorbar(
aes(ymin=md_main_ll, ymax=md_main_ul),
width=.2,
position=position_dodge(0.05)) +
labs(title=main_plot_title,
x = "Month Offset", y = "Mean Degree") +
theme(legend.position = "none") +
ylim(c(0.35, 0.5)) +
theme_minimal(base_size = 10)
main_plot <- main_plot +
geom_hline(aes(yintercept = unique(md_main_dos)),
linetype = "dotted",
data = md_df)
main_plot <- main_plot +
geom_hline(aes(yintercept = unique(md_main_dos_ll)),
linetype = "dashed",
data = md_df)
main_plot <- main_plot +
geom_hline(aes(yintercept = unique(md_main_dos_ul)),
linetype = "dashed",
data = md_df)
main_plot <- main_plot + scale_x_discrete(breaks = factor(
unique(md_df$month_num)),
labels = unique(md_df$month))
casl_plot <- ggplot(md_df,
aes(x=factor(month_num), y=md_casl),
theme(axis.text.x = month)) +
geom_line() +
geom_point()+
geom_errorbar(
aes(ymin=md_casl_ll, ymax=md_casl_ul),
width=.2,
position=position_dodge(0.05)) +
labs(title=casl_plot_title,
x = "Month Offset", y = "Mean Degree") +
theme(legend.position = "none") +
ylim(c(0.6, 0.85)) +
theme_minimal(base_size = 10)
casl_plot <- casl_plot +
geom_hline(aes(yintercept = unique(md_casl_dos)),
linetype = "dotted",
data = md_df)
casl_plot <- casl_plot +
geom_hline(aes(yintercept = unique(md_casl_dos_ll)),
linetype = "dashed",
data = md_df)
casl_plot <- casl_plot +
geom_hline(aes(yintercept = unique(md_casl_dos_ul)),
linetype = "dashed",
data = md_df)
casl_plot <- casl_plot + scale_x_discrete(breaks = factor(
unique(md_df$month_num)),
labels = unique(md_df$month))
#require(gridExtra)
suppressMessages(grid.arrange(total_plot, main_plot, casl_plot, nrow=3))
} else {
total_plot_title <- paste("All Partnerships (Main & Casual)")
main_plot_title <- paste("Main Partnerships")
casl_plot_title <- paste("Casual Partnerships")
total_plot <- ggplot(md_df,
aes(x=factor(month_num), y=md_total,
group=var_val, color=var_val),
theme(axis.text.x = month)) +
geom_line() +
geom_point()+
geom_errorbar(
aes(ymin=md_total_ll, ymax=md_total_ul),
width=.2,
position=position_dodge(0.05)) +
labs(title=total_plot_title,
x = "Month Offset", y = "Mean Degree") +
scale_color_discrete(name=cat,
labels=labels) +
ylim(c(0.5, 2))
total_plot <- total_plot +
geom_hline(data = md_df,
aes(yintercept = md_total_dos, col = var_val),
linetype = "dashed") +
theme_minimal(base_size = 10)
main_plot <- ggplot(md_df,
aes(x=factor(month_num), y=md_main,
group=var_val, color=var_val),
theme(axis.text.x = month)) +
geom_line() +
geom_point() +
geom_errorbar(
aes(ymin=md_main_ll, ymax=md_main_ul),
width=.2,
position=position_dodge(0.05)) +
labs(title=main_plot_title,
x = "Month Offset", y = "Mean Degree") +
theme_minimal(base_size = 10) +
theme(legend.position = "none") +
ylim(c(0.2, 0.6))
main_plot <- main_plot +
geom_hline(data = md_df,
aes(yintercept = md_main_dos, col = var_val),
linetype = "dashed")
casl_plot <- ggplot(md_df,
aes(x=factor(month_num), y=md_casl,
group=var_val, color=var_val),
theme(axis.text.x = month)) +
geom_line() +
geom_point()+
geom_errorbar(
aes(ymin=md_casl_ll, ymax=md_casl_ul),
width=.2,
position=position_dodge(0.05)) +
labs(title=casl_plot_title,
x = "Month Offset", y = "Mean Degree") +
theme_minimal(base_size = 10) +
theme(legend.position = "none") +
ylim(c(0.3, 1.5))
casl_plot <- casl_plot +
geom_hline(data = md_df,
aes(yintercept = md_casl_dos, col = var_val),
linetype = "dashed")
#require(gridExtra)
#require(cowplot)
legend <- get_legend(total_plot)
total_plot <- total_plot + theme(legend.position = "none")
grid.arrange(arrangeGrob(total_plot, main_plot, casl_plot), legend, ncol=2,
widths=c(5,1))
}
}
png('Figure1.png', width=2048, height=1536, res=300)
plot_md_comparisons(all)
dev.off()
png('Figure2.png', width=2048, height=1536, res=300)
plot_md_comparisons(partners_bi2, "Total Partners",
c("5 or fewer",
"6 or more"))
dev.off()
png('SF2.png', width=2048, height=1536, res=300)
plot_md_comparisons(race.cat, "Race/Ethnicity",
c("Black","Hispanic", "Other", "White"))
dev.off()
png('SF1.png', width=2048, height=1536, res=300)
plot_md_comparisons(race.cat, "Race/Ethnicity",
c("Black","Hispanic", "Other", "White"))
dev.off()
png('SF2.png', width=2048, height=1536, res=300)
plot_md_comparisons(age.cat, "Age Category",
c("15-24 years",
"25-34 years",
"35-44 years",
"45-54 years",
"55-65 years"))
dev.off()
png('SF3.png', width=2048, height=1536, res=300)
plot_md_comparisons(region, "Census Region",
c("Northeast",
"Midwest",
"South",
"West"))
dev.off()
png('SF4.png', width=2900, height=1600, res=350)
plot_md_comparisons(education, "Education Level",
c("High school or below",
"Some college",
"College and above"))
dev.off()
png('SF5.png', width=3000, height=1600, res=300)
plot_md_comparisons(income, "Annual Household Income",
c("$0 to $19,999",
"$20,000 to $39,999",
"$40,000 to $74,999",
"$75,000 or more"))
dev.off()
plot_md_comparisons <- function(md_df, cat, labels) {
if (length(unique(md_df$var_val)) == 1) {
total_plot_title <- paste("All Partnerships (Main & Casual)")
main_plot_title <- paste("Main Partnerships")
casl_plot_title <- paste("Casual Partnerships")
total_plot <- ggplot(md_df,
aes(x=factor(month_num), y=md_total)) +
geom_line() +
geom_point() +
geom_errorbar(
aes(ymin=md_total_ll, ymax=md_total_ul),
width=.2,
position=position_dodge(0.05)) +
labs(fill= "Category", title=total_plot_title,
x = "Month Offset", y = "Mean Degree") +
ylim(c(0.9, 1.3)) +
theme_minimal(base_size = 10)
total_plot <- total_plot +
geom_hline(aes(yintercept = unique(md_total_dos)),
linetype = "dotted",
data = md_df)
total_plot <- total_plot +
geom_hline(aes(yintercept = unique(md_total_dos_ll)),
linetype = "dashed",
data = md_df)
total_plot <- total_plot +
geom_hline(aes(yintercept = unique(md_total_dos_ul)),
linetype = "dashed",
data = md_df)
total_plot <- total_plot + scale_x_discrete(breaks = factor(
unique(md_df$month_num)),
labels = unique(
md_df$month))
main_plot <- ggplot(md_df,
aes(x=factor(month_num), y=md_main),
theme(axis.text.x = month)) +
geom_line() +
geom_point()+
geom_errorbar(
aes(ymin=md_main_ll, ymax=md_main_ul),
width=.2,
position=position_dodge(0.05)) +
labs(title=main_plot_title,
x = "Month Offset", y = "Mean Degree") +
theme(legend.position = "none") +
ylim(c(0.35, 0.5)) +
theme_minimal(base_size = 10)
main_plot <- main_plot +
geom_hline(aes(yintercept = unique(md_main_dos)),
linetype = "dotted",
data = md_df)
main_plot <- main_plot +
geom_hline(aes(yintercept = unique(md_main_dos_ll)),
linetype = "dashed",
data = md_df)
main_plot <- main_plot +
geom_hline(aes(yintercept = unique(md_main_dos_ul)),
linetype = "dashed",
data = md_df)
main_plot <- main_plot + scale_x_discrete(breaks = factor(
unique(md_df$month_num)),
labels = unique(md_df$month))
casl_plot <- ggplot(md_df,
aes(x=factor(month_num), y=md_casl),
theme(axis.text.x = month)) +
geom_line() +
geom_point()+
geom_errorbar(
aes(ymin=md_casl_ll, ymax=md_casl_ul),
width=.2,
position=position_dodge(0.05)) +
labs(title=casl_plot_title,
x = "Month Offset", y = "Mean Degree") +
theme(legend.position = "none") +
ylim(c(0.6, 0.85)) +
theme_minimal(base_size = 10)
casl_plot <- casl_plot +
geom_hline(aes(yintercept = unique(md_casl_dos)),
linetype = "dotted",
data = md_df)
casl_plot <- casl_plot +
geom_hline(aes(yintercept = unique(md_casl_dos_ll)),
linetype = "dashed",
data = md_df)
casl_plot <- casl_plot +
geom_hline(aes(yintercept = unique(md_casl_dos_ul)),
linetype = "dashed",
data = md_df)
casl_plot <- casl_plot + scale_x_discrete(breaks = factor(
unique(md_df$month_num)),
labels = unique(md_df$month))
#require(gridExtra)
suppressMessages(grid.arrange(total_plot, main_plot, casl_plot, nrow=3))
} else {
total_plot_title <- paste("All Partnerships (Main & Casual)")
main_plot_title <- paste("Main Partnerships")
casl_plot_title <- paste("Casual Partnerships")
total_plot <- ggplot(md_df,
aes(x=factor(month_num), y=md_total,
group=var_val, color=var_val),
theme(axis.text.x = month)) +
geom_line() +
geom_point()+
geom_errorbar(
aes(ymin=md_total_ll, ymax=md_total_ul),
width=.2,
position=position_dodge(0.05)) +
labs(title=total_plot_title,
x = "Month Offset", y = "Mean Degree") +
scale_color_discrete(name=cat,
labels=labels) +
ylim(c(0.5, 2))
total_plot <- total_plot +
geom_hline(data = md_df,
aes(yintercept = md_total_dos, col = var_val),
linetype = "dashed") +
theme_minimal(base_size = 10)
main_plot <- ggplot(md_df,
aes(x=factor(month_num), y=md_main,
group=var_val, color=var_val),
theme(axis.text.x = month)) +
geom_line() +
geom_point() +
geom_errorbar(
aes(ymin=md_main_ll, ymax=md_main_ul),
width=.2,
position=position_dodge(0.05)) +
labs(title=main_plot_title,
x = "Month Offset", y = "Mean Degree") +
theme_minimal(base_size = 10) +
theme(legend.position = "none") +
ylim(c(0.2, 0.6))
main_plot <- main_plot +
geom_hline(data = md_df,
aes(yintercept = md_main_dos, col = var_val),
linetype = "dashed")
casl_plot <- ggplot(md_df,
aes(x=factor(month_num), y=md_casl,
group=var_val, color=var_val),
theme(axis.text.x = month)) +
geom_line() +
geom_point()+
geom_errorbar(
aes(ymin=md_casl_ll, ymax=md_casl_ul),
width=.2,
position=position_dodge(0.05)) +
labs(title=casl_plot_title,
x = "Month Offset", y = "Mean Degree") +
theme_minimal(base_size = 10) +
theme(legend.position = "none") +
ylim(c(0, 2))
casl_plot <- casl_plot +
geom_hline(data = md_df,
aes(yintercept = md_casl_dos, col = var_val),
linetype = "dashed")
#require(gridExtra)
#require(cowplot)
legend <- get_legend(total_plot)
total_plot <- total_plot + theme(legend.position = "none")
grid.arrange(arrangeGrob(total_plot, main_plot, casl_plot), legend, ncol=2,
widths=c(5,1))
}
}
png('Figure2.png', width=2048, height=1536, res=300)
plot_md_comparisons(partners_bi2, "Total Partners",
c("5 or fewer",
"6 or more"))
dev.off()
png('Figure3.png', width=2048, height=1536, res=300)
plot_md_comparisons(partners_bi2, "Total Partners",
c("5 or fewer",
"6 or more"))
dev.off()
png('Figure2.png', width=2048, height=1536, res=300)
plot_md_comparisons(all)
dev.off()
?basis
# Restricted Cubic Splines Coding.  See Lusa PLOS one 2020
# there is a typo in Lusa, 2nd contr to bases should be: - (neg)
library(tidyverse)
library(pscl)
library(dplyr)
library(data.table)
library(readxl)
??basis
?basis
t =c(3, 3.5, 4, 4.5, 6)  #K=5 knoots
K = length(t)
x = seq(0,100)/10  # x ranges from 0 to 10
basis <- function(x, j) {
L = length(x)
bas= rep(0, L)
for(i in 1: L){   #there is a typo in Lusa, 2nd contr to bases should be: - (neg)
if (x[i] >= t[j])  {bas[i]=          (x[i]-t[j]  )**3                             }
if (x[i] >= t[K-1]){bas[i]= bas[i]- ((x[i]-t[K-1])**3)*(t[K]-t[j])  /(t[K]-t[K-1])}
if (x[i] >= t[K]  ){bas[i]= bas[i]+ ((x[i]-t[K]  )**3)*(t[K-1]-t[j])/(t[K]-t[K-1])}
}
bas
}
x[100:101]
x0= x
x1= basis(x, 1)
x2= basis(x, 2)
x3= basis(x, 3)  #last one: K-2
x1
x2
K
x3
